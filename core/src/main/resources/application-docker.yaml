# 동일한 도커 네트워크 내에서 실행할 때

server:
  port: 8082

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://db:3306/quick_deal
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: validate
    generate-ddl: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        format_sql: false
    show-sql: false
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    sql-migration-suffixes: sql,ddl
  data:
    redis:
      host: redis
      port: 6379
      password:
      database: 0
      timeout: 10000ms

kafka:
  bootstrap-servers: kafka:9092

logging:
  level:
    com.quickdeal: DEBUG
    org.springframework.data.redis: DEBUG

# 비즈니스 설정 값
order-creation:
  retry-delay: 1000
  retry-limit: 500
  max-concurrent-users: 1000
  timeout-seconds: 1200s
  page-timeout-seconds: 600s
  secret-key: ${SECRET_KEY}
  expiration: 2h
  renewal-threshold: 30m
  extension-duration: 1h
  kafka-topics-order-creation-request:
    - quick-deal.order.creation.request-1
    - quick-deal.order.creation.request-2
    - quick-deal.order.creation.request-3
    - quick-deal.order.creation.request-4
    - quick-deal.order.creation.request-5
    - quick-deal.order.creation.request-6
    - quick-deal.order.creation.request-7
    - quick-deal.order.creation.request-8
    - quick-deal.order.creation.request-9
    - quick-deal.order.creation.request-10
    - quick-deal.order.creation.request-11
    - quick-deal.order.creation.request-12
    - quick-deal.order.creation.request-13
    - quick-deal.order.creation.request-14
    - quick-deal.order.creation.request-15
    - quick-deal.order.creation.request-16
    - quick-deal.order.creation.request-17
    - quick-deal.order.creation.request-18
    - quick-deal.order.creation.request-19
    - quick-deal.order.creation.request-20
